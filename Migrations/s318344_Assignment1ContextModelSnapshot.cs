// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Group9_Assignment2.Data;

#nullable disable

namespace Group9_Assignment2_HIT339.Migrations
{
    [DbContext(typeof(Group9_Assignment2Context))]
    partial class s318344_Assignment1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Group9_Assignment2.Models.GenderModel", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"), 1L, 1);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenderId");

                    b.ToTable("GenderModel");
                });

            modelBuilder.Entity("Group9_Assignment2.Models.InstrumentModel", b =>
                {
                    b.Property<int>("InstrumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstrumentId"), 1L, 1);

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstrumentId");

                    b.ToTable("InstrumentModel");
                });

            modelBuilder.Entity("Group9_Assignment2.Models.LessonModel", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LessonId"), 1L, 1);

                    b.Property<int>("InstrumentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LessonDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LessonTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("LetterId")
                        .HasColumnType("int");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TutorId")
                        .HasColumnType("int");

                    b.HasKey("LessonId");

                    b.HasIndex("InstrumentId");

                    b.HasIndex("LessonTypeId");

                    b.HasIndex("LetterId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TutorId");

                    b.ToTable("LessonModel");
                });

            modelBuilder.Entity("Group9_Assignment2.Models.LessonTypeModel", b =>
                {
                    b.Property<int>("LessonTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LessonTypeId"), 1L, 1);

                    b.Property<float>("LessonCost")
                        .HasColumnType("real");

                    b.Property<int>("LessonDuration")
                        .HasColumnType("int");

                    b.Property<string>("LessonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LessonTypeId");

                    b.ToTable("LessonTypeModel");
                });

            modelBuilder.Entity("Group9_Assignment2.Models.LetterModel", b =>
                {
                    b.Property<int>("LetterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LetterId"), 1L, 1);

                    b.Property<DateTime>("LetterCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("_LetterContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LetterId");

                    b.HasIndex("StudentId");

                    b.ToTable("LetterModel");
                });

            modelBuilder.Entity("Group9_Assignment2.Models.StudentModel", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"), 1L, 1);

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("GuardianName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PaymentContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentFirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StudentLastName")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("StudentID");

                    b.HasIndex("GenderId");

                    b.ToTable("StudentModel");
                });

            modelBuilder.Entity("Group9_Assignment2.Models.TutorModel", b =>
                {
                    b.Property<int>("TutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TutorId"), 1L, 1);

                    b.Property<string>("TutorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TutorId");

                    b.ToTable("TutorModel");
                });

            modelBuilder.Entity("Group9_Assignment2.Models.LessonModel", b =>
                {
                    b.HasOne("Group9_Assignment2.Models.InstrumentModel", "Instrument")
                        .WithMany("Lessons")
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Group9_Assignment2.Models.LessonTypeModel", "LessonType")
                        .WithMany()
                        .HasForeignKey("LessonTypeId");

                    b.HasOne("Group9_Assignment2.Models.LetterModel", "Letter")
                        .WithMany("Lessons")
                        .HasForeignKey("LetterId");

                    b.HasOne("Group9_Assignment2.Models.StudentModel", "Student")
                        .WithMany("Lessons")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Group9_Assignment2.Models.TutorModel", "Tutor")
                        .WithMany("Lessons")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instrument");

                    b.Navigation("LessonType");

                    b.Navigation("Letter");

                    b.Navigation("Student");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("Group9_Assignment2.Models.LetterModel", b =>
                {
                    b.HasOne("Group9_Assignment2.Models.StudentModel", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Group9_Assignment2.Models.StudentModel", b =>
                {
                    b.HasOne("Group9_Assignment2.Models.GenderModel", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("Group9_Assignment2.Models.InstrumentModel", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("Group9_Assignment2.Models.LetterModel", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("Group9_Assignment2.Models.StudentModel", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("Group9_Assignment2.Models.TutorModel", b =>
                {
                    b.Navigation("Lessons");
                });
#pragma warning restore 612, 618
        }
    }
}
